@page "/update-user-info"
@using Frontend.Helpers
@using global::Helpers.Models
@using Microsoft.AspNetCore.Components.Authorization
@inject ApiHelper ApiHelper
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Update User Info</PageTitle>
@if (_user == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="_user" OnValidSubmit="UpdateUser">
        <div class="mb-3">
            <label for="username">Username:</label>
            <InputText id="username" @bind-Value="_user.Username" class="form-control" />
        </div>

        <div class="mb-3">
            <label for="password">Password:</label>
            <InputText id="password" @bind-Value="_user.Password" type="password" class="form-control" />
        </div>

        <div class="mb-3">
            <label for="roleId">Role ID:</label>
            <InputNumber id="roleId" @bind-Value="_user.RoleId" class="form-control" />
        </div>

        <button type="submit" class="btn btn-primary">Update</button>
    </EditForm>
}

@code {
    private UserEditModel? _user;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        
        if (user.Identity is { IsAuthenticated: true })
        {
            string username = user.Identity.Name;
            _user = await ApiHelper.GetFromApiAsync<UserEditModel>($"get_user/{username}");
        }
    }

    private async Task UpdateUser()
    {
        var result = await ApiHelper.PutToApiAsync("update_user", _user);

        if (result)
        {
            // Handle success (e.g., show a success message or redirect)
            Console.WriteLine("User updated successfully!");
        }
        else
        {
            // Handle error
            Console.WriteLine("Failed to update user.");
        }
    }

    public class UserEditModel
    {
        public string Username { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
        public int RoleId { get; set; }
    }
}