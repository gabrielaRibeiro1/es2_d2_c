@page "/"
@using Frontend.Helpers
@inject HttpClient Http
@inject NavigationManager Navigation
@inject ApiAuthenticationStateProvider AuthStateProvider
@rendermode InteractiveServer

<h3>Login</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="text-danger">@errorMessage</p>
}

<EditForm Model="loginModel" OnValidSubmit="HandleLogin" FormName="loginForm">

    
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Username:</label>
        <InputText @bind-Value="loginModel.Username" class="form-control" />
    </div>

    <div>
        <label>Password:</label>
        <InputText @bind-Value="loginModel.Password" class="form-control" type="password" />
    </div>

    <button style="margin-top: 10px" type="submit" class="btn btn-primary">Login</button>

    <NavLink style="margin-top: 10px"  class="btn btn-secondary ms-2" href="/create-account">
        Create Account
    </NavLink>
</EditForm>

@code {
    private ApiAuthenticationStateProvider.LoginModel loginModel = new();
    private string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        bool success = await AuthStateProvider.LoginAsync(loginModel);

        if (success)
        {
            Navigation.NavigateTo("/home");
           
        }
        else
        {
            errorMessage = "Usuário ou senha inválidos.";
        }
    }
}