@page "/"

@using Frontend.Helpers

@inject HttpClient Http
@inject NavigationManager Navigation
@inject ApiAuthenticationStateProvider AuthStateProvider
@inject IJSRuntime _jsRuntime

@rendermode InteractiveServer

<div class="card mt-5 mx-auto" style="max-width: 500px;">
    <div class="card-header" style="background-color:whitesmoke; color: black;">
        <h3 class="mb-0">Login</h3>
    </div>
    <div class="card-body">
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger">@errorMessage</div>
        }

        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="username" class="form-label">Username</label>
                <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
                <ValidationMessage For="() => loginModel.Username" />
            </div>

            <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
                <ValidationMessage For="() => loginModel.Password" />
            </div>

            <button type="submit" class="btn btn-primary me-2">Login</button>
            <NavLink class="btn btn-secondary" href="/create-account">Create Account</NavLink>
        </EditForm>
    </div>
</div>

@code {
    private ApiAuthenticationStateProvider.LoginModel loginModel = new();
    private string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        var success = await AuthStateProvider.LoginAsync(loginModel);
        if (success)
        {
            Navigation.NavigateTo("/home", forceLoad: true);
        }
        else
        {
            errorMessage = "Username or password incorrect!";
        }
    }
}
