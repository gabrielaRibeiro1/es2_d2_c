@page "/"

@inject NavigationManager Navigation
@inject IJSRuntime JsRuntime

<PageTitle>Home</PageTitle>

@if (!string.IsNullOrEmpty(_username))
{
    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
        <p style="margin: 0;">Welcome, <strong>@_username</strong>!</p>
    </div>
}

<!-- Hero Section -->
<section class="hero">
    <div class="hero-content px-6 py-24">
        <h1 class="hero-title">Welcome to ITalent</h1>
        <p class="hero-subtitle mt-4">
            The ultimate platform for recruiting IT talent.
        </p>
        <ul class="features-list mt-6">
            <li>🔎 Discover qualified IT professional's profiles.</li>
            <li>📂 Organize applications and hiring processes intuitively.</li>
            <li>⚡ Connect swiftly with the ideal candidates.</li>
        </ul>
        <NavLink class="btn-primary mt-8" href="login">Get Started</NavLink>
    </div>
</section>

<article class="intro px-4 py-8 mt-12">
    <h2>What is ITalent?</h2>
    <p class="mt-2">
        ITalent is a platform designed for both tech companies and candidates. Here, recruiters can find developers, analysts, engineers, and other qualified IT professionals.
    </p>
    <p class="mt-4">
        If you’re looking for opportunities in IT, sign up and create your profile in minutes. If you’re a recruiter, post jobs and manage the entire hiring process in one place.
    </p>
</article>

@code
{
    private int _loggedInUserId;
    private string _username = "";
    private bool _loadingUser = true;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var idString = await JsRuntime.InvokeAsync<string>("sessionStorage.getItem", "userId");
            var username = await JsRuntime.InvokeAsync<string>("sessionStorage.getItem", "username");

            if (int.TryParse(idString, out int userId) && !string.IsNullOrEmpty(username))
            {
                _loggedInUserId = userId;
                _username = username;
                _loadingUser = false;
                StateHasChanged();
            }
            else
            {
                _loadingUser = false;
                StateHasChanged();
                Navigation.NavigateTo("/login", true);
            }
        }
    }
}

<style>
    .hero {
        background-image: linear-gradient(180deg, rgb(5, 39, 103) 0%, #3a0647 70%);
        color: #fff;
        text-align: center;
        border-radius: 8px;
        padding: 1rem;
    }
    .hero-content {
        max-width: 800px;
        margin: 0 auto;
    }
    .hero-title {
        font-size: 2.5rem;
        font-weight: bold;
    }
    .hero-subtitle {
        font-size: 1.25rem;
    }
    .features-list {
        list-style-type: none;
        padding: 0;
        font-size: 1rem;
    }
    .features-list li {
        margin-bottom: 0.5rem;
    }
    .btn-primary {
        display: inline-block;
        background-color: #ffffff;
        color: #000000;
        padding: 0.75rem 1.5rem;
        border-radius: 4px;
        text-decoration: none;
        font-weight: 600;
        transition: background-color 0.3s ease;
    }
    .btn-primary:hover {
        background-color: #b7b7b7;
        color: #000000;
    }
    .intro {
        margin-top: 2rem;
    }
    .intro h2 {
        font-size: 1.75rem;
        font-weight: 600;
    }
    .intro p {
        line-height: 1.6;
        color: #333;
    }
</style>
