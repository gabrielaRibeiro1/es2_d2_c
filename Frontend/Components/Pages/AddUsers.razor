@page "/add-user"
@using Frontend.Helpers
@using global::Helpers.Models
@inject ApiHelper ApiHelper
@rendermode InteractiveServer
<PageTitle>Adicionar User</PageTitle>


<h1>Adicionar User</h1>

<EditForm Model="@userModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username:</label>
        <InputText id="username" class="form-control" @bind-Value="userModel.Username" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="userModel.Password" />
    </div>

    <div class="form-group">
        <label for="role">Role:</label>
        <InputSelect id="role" class="form-control" @bind-Value="userModel.RoleId">
            <option value="1">Admin</option>
            <option value="2">UserManager</option>
            <option value="3">User</option>
        </InputSelect>
    </div>

    <div class="mt-3">
        <button type="submit" class="btn btn-primary">Save</button>
        <NavLink class="btn btn-secondary ms-2" href="user-info">Cancelar</NavLink>
    </div>
</EditForm>

@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success mt-2">@successMessage</div>
}
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-2">@errorMessage</div>
}

@code {
    private UserAddModel userModel = new ();
    private string successMessage;
    private string errorMessage;

    private async Task HandleValidSubmit()
    {
        successMessage = errorMessage = null;

        try
        {
            var payload = new
            {
                username    = userModel.Username,
                password    = userModel.Password,
                fk_role_id  = userModel.RoleId
            };

            var createdUser = await ApiHelper.PostToApiAsync<object, UserAddModel>("/create_account", payload);

            if (createdUser is not null)
            {
                successMessage = $"User '{createdUser.Username}' (ID {createdUser.UserId}) successfully created!";
                userModel = new UserAddModel();
            }
            else
            {
                errorMessage = "Unknown error: server returned no user data.";
            }
        }
        catch (ApiException apiEx)
        {
            // ApiException carries StatusCode + server error content
            errorMessage = $"API error ({apiEx.StatusCode}): {apiEx.Message}";
        }
        catch (Exception ex)
        {
            errorMessage = $"An unexpected error occurred: {ex.Message}";
        }
    }
}
