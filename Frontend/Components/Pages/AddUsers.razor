@page "/add-user"
@inject IJSRuntime JSRuntime
@using Frontend.Helpers
@using global::Helpers.Models
@using Microsoft.AspNetCore.Components.Authorization
@inject ApiHelper ApiHelper
@inject AuthenticationStateProvider AuthenticationStateProvider
@rendermode InteractiveServer
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient Http


<PageTitle>Add User</PageTitle>


<h1>Add User</h1>

<EditForm Model="@userModel" OnValidSubmit="HandleValidSubmit" >
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username:</label>
        <InputText id="username" class="form-control" @bind-Value="userModel.Username" />
    </div>

    <div class="form-group">
        <label for="password">Pasword::</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="userModel.Password" />
    </div>

    <div class="form-group">
        <label for="role">Role:</label>
        <InputSelect id="role" class="form-control" @bind-Value="userModel.RoleId">
            <option value="1">Admin</option>
            <option value="2">UserManager</option>
            <option value="3">User</option>
        </InputSelect>
    </div>


    <button type="submit" class="btn btn-primary mt-2">Save</button>
    <NavLink  class="btn btn-secondary ms-2" href="user-info">
        Cancel
    </NavLink>
</EditForm>

@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success mt-2">@successMessage</div>
}
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-2">@errorMessage</div>
}

@code {
    private UserAddModel userModel = new UserAddModel();
    
    private string successMessage;
    private string errorMessage;

    private async Task HandleValidSubmit()
    {
        try
        {
            // Aqui estamos utilizando o método PutToApiAsync do seu ApiHelper.
            bool success = await ApiHelper.PostToApiAsync2("/add_user", userModel);
            if (success)
            {
                successMessage = "Usuário inserido com sucesso!";
                errorMessage = null;
                // Opcionalmente, limpe o formulário para uma nova inserção.
                userModel = new UserAddModel();
            }
            else
            {
                successMessage = null;
                errorMessage = "Erro ao inserir usuário.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Ocorreu um erro: {ex.Message}";
            successMessage = null;
        }
    }
}