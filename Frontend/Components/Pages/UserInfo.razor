@page "/user-info"
@inject IJSRuntime JSRuntime
@using Frontend.Helpers
@using global::Helpers.Models
@using Microsoft.AspNetCore.Components.Authorization
@inject ApiHelper ApiHelper
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>User Info</PageTitle>


<h1>User Info</h1>


<button class="btn btn-primary mb-3">Add User</button>

@if (_users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
        <tr>
          
            <th>Username</th>
            <th>Role</th>
            <th>Actions</th>
            
        </tr>
        </thead>
        <tbody>
        @foreach (var user in _users)
        {
            <tr>
                
                <td>@user.Username</td>
                <td>@user.fk_role_id</td>
                
                <td>
                    <div class="d-flex gap-2"> 
                        <button class="btn btn-secondary btn-sm" >
                            <i class="bi bi-pencil"></i> 
                        </button>
                        <button class="btn btn-danger btn-sm" >
                            <i class="bi bi-trash" @onclick="() => DeleteUserById(user.UserId)"></i> 
                        </button>
                    </div>
                </td>
                
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private List<UserViewModel>? _users;
 

    protected override async Task OnInitializedAsync()
    {
        
            _users = await ApiHelper.GetFromApiAsync<List<UserViewModel>>("get_all_users");
        
    }
    
    
    
    
    private async Task DeleteUserById(int userId)
    {
        
    }
}